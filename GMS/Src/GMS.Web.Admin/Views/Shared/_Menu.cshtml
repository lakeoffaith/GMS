@using GMS.Core.Config
@using GMS.Web.Admin.Common

@{
    var adminMenuConfig = CachedConfigContext.Current.AdminMenuConfig;
    var permissions = AdminUserContext.Current.LoginInfo.BusinessPermissionList.Select(p => p.ToString());
    
}

<div class="page-sidebar-wrapper">
		<!-- DOC: Set data-auto-scroll="false" to disable the sidebar from auto scrolling/focusing -->
		<!-- DOC: Change data-auto-speed="200" to adjust the sub menu slide up/down speed -->
		<div class="page-sidebar navbar-collapse collapse">
			<!-- BEGIN SIDEBAR MENU -->
			<!-- DOC: Apply "page-sidebar-menu-light" class right after "page-sidebar-menu" to enable light sidebar menu style(without borders) -->
			<!-- DOC: Apply "page-sidebar-menu-hover-submenu" class right after "page-sidebar-menu" to enable hoverable(hover vs accordion) sub menu mode -->
			<!-- DOC: Apply "page-sidebar-menu-closed" class right after "page-sidebar-menu" to collapse("page-sidebar-closed" class must be applied to the body element) the sidebar sub menu mode -->
			<!-- DOC: Set data-auto-scroll="false" to disable the sidebar from auto scrolling/focusing -->
			<!-- DOC: Set data-keep-expand="true" to keep the submenues expanded -->
			<!-- DOC: Set data-auto-speed="200" to adjust the sub menu slide up/down speed -->
			<ul class="page-sidebar-menu" data-keep-expanded="false" data-auto-scroll="true" data-slide-speed="200">
				<!-- DOC: To remove the sidebar toggler from the sidebar you just need to completely remove the below "sidebar-toggler-wrapper" LI element -->
				<li class="sidebar-toggler-wrapper">
					<!-- BEGIN SIDEBAR TOGGLER BUTTON -->
					<div class="sidebar-toggler">
					</div>
					<!-- END SIDEBAR TOGGLER BUTTON -->
				</li>
				<!-- DOC: To remove the search box from the sidebar you just need to completely remove the below "sidebar-search-wrapper" LI element -->
				
                @foreach (var group in adminMenuConfig.AdminMenuGroups)
                {
                    if (!string.IsNullOrEmpty(group.Permission) && !permissions.Contains(group.Permission))
                    {
                        continue;
                    }
                    var menus = group.AdminMenuArray.Where(m => string.IsNullOrEmpty(m.Permission) || permissions.Contains(m.Permission));
                    var hasSub = menus.Count() > 0;
                    if (!hasSub && string.IsNullOrEmpty(group.Url))
                    {
                        continue;
                    }
                    <li class="@(hasSub?"has-sub":string.Empty)">
                        <a href="@(hasSub?"javascript:;":group.Url)" title="@group.Info">
                        <i class="@group.Info"></i>
                        <span class="title">@group.Name</span>
                         @if (hasSub)
                         {
                            <span class="arrow "></span>
                         }
                            </a>
                         @if (hasSub)
                         {
                             <ul class="sub-menu">
                                 @foreach (var menu in menus)
                                 {
                                     <li>
							            <a href="@menu.Url" title="@menu.Info">
							            <i class="icon-bar-chart"></i>
							            @menu.Name</a>
						            </li>
                                 }
                             </ul>
                         }
                    </li>
                }
			</ul>
			<!-- END SIDEBAR MENU -->
		</div>
	</div>